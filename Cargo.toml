[workspace]
resolver = "3"
members = ["crates/*", "crates/*/macros"]
exclude = ["tools"]

[workspace.package]
edition = "2024"
version = "0.0.1"
license-file = "LICENSE"
readme = "README.md"
rust-version = "1.88.0"
publish = false
repository = "https://github.com/dungeon-rs/dungeon-rs"
authors = [
  "Wannes Gennar <info@dealloc.be>",
  "Amber Swevers <amber.swevers@hotmail.com>"
]

[workspace.lints.rust]
unsafe_code = "forbid"
missing_docs = "warn"

[workspace.lints.rustdoc]
private_intra_doc_links = "allow"

[workspace.lints.clippy]
pedantic = "warn"
suspicious = "warn"
complexity = "warn"
missing_docs_in_private_items = "warn"
module_name_repetitions = "warn"
semicolon_if_nothing_returned = "warn"

[workspace.dependencies]
bevy = { version = "0.16.1", default-features = false, features = ["std", "bevy_log"] }
log = { version = "*", features = ["max_level_debug", "release_max_level_warn"] }
anyhow = "1.0.99"
thiserror = "2.0.16"
serde = { version = "1.0.226", features = ["derive"] }
semver = { version = "1.0.27", features = ["serde"] }
tempfile = { version = "3.22.0" }
native-dialog = { version = "0.9.0", default-features = false, features = ["windows_dpi_awareness", "windows_visual_styles"] }
crossbeam-channel = "0.5.15"
clap = { version = "4.5.47", features = ["derive"] }

# Workspace packages
drs-assets = { path = "crates/drs-assets" }
drs-config = { path = "crates/drs-config" }
drs-core = { path = "crates/drs-core" }
drs-data = { path = "crates/drs-data" }
drs-i18n = { path = "crates/drs-i18n" }
drs-logging = { path = "crates/drs-logging" }
drs-serialization = { path = "crates/drs-serialization" }
drs-ui = { path = "crates/drs-ui" }
drs-utils = { path = "crates/drs-utils" }

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Temporary fix to make Bevy run under OSX 26-beta
[profile.dev.package.objc2]
debug-assertions = false

# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# Special profile of the release build that adds debug symbols (for backtrace) and unwinding panics
[profile.release-report]
inherits = "release"
debug = "full"
panic = "unwind"

# We create a separate profile called 'fast' that disables all optimisation in favour of faster compilation for use in CI.
[profile.fast]
inherits = "dev"
opt-level = 0
codegen-units = 256
strip = "none"
debug-assertions = true
overflow-checks = true
lto = false
incremental = true

[profile.fast.package."*"]
opt-level = 0

# Remove false positives for cargo machete
[workspace.metadata.cargo-machete]
ignored = ["serde"]
